/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Views;

import Models.Lop;
import Models.SinhVien;
import com.google.gson.Gson;
import java.awt.Dimension;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLEncoder;

import java.nio.charset.StandardCharsets;
import javax.swing.JOptionPane;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JFileChooser;
import java.util.Map;
import java.util.HashMap;
import java.util.stream.Collectors;

import javax.swing.table.DefaultTableModel;
import main.qlsinhvien.ExcelExporter;

/**
 *
 * @author LNV
 */
public class sinhvien extends javax.swing.JPanel {

    private java.util.HashMap<String, String> lopMap = new java.util.HashMap<>(); // key = tên lớp, value = mã lớp
    private java.util.HashMap<String, String> lopMapReverse = new java.util.HashMap<>();  // key = mã lớp, value = tên lớp

    /**
     * Creates new form sinhvien
     */
    public sinhvien() {
        initComponents();

        loadLop();
        loadtb();
        btnLuu.setEnabled(false);
        btnsua.setEnabled(false);
        btnxoa.setEnabled(false);
        cbxlop.addActionListener(e -> loadsinhvientheolop());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtfindmasv = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtfindtensv = new javax.swing.JTextField();
        btntimkiem = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtmasv = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtname = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cbgoitinh = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        cbclass = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        txtphone = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtmail = new javax.swing.JTextField();
        dateNS = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();
        btnLuu = new javax.swing.JButton();
        btnsua = new javax.swing.JButton();
        btnxoa = new javax.swing.JButton();
        btnxuatexcel = new javax.swing.JButton();
        cbxlop = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        txtfindmasv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfindmasvActionPerformed(evt);
            }
        });

        jLabel10.setText("Tên sv:");

        btntimkiem.setText("Tìm kiếm");
        btntimkiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntimkiemActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã sv", "Tên sv", "Ngày sinh", "Giới tính", "Điện thoại", "Email", "Tên lớp"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 567, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel9.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel9.setText("Quản lý sinh viên");

        jLabel8.setText("Mã sv:");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin chi tiết", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14), new java.awt.Color(0, 102, 255))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Mã sinh viên:");

        txtmasv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmasvActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Họ và tên:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Ngày sinh:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Giới tính:");

        cbgoitinh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---Chọn giới tính---", "Nam", "Nữ ", "Khác" }));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Lớp học:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Điện thoại:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("Email:");

        dateNS.setDateFormatString("dd/MM/yyyy"); // NOI18N

        jButton1.setText("Thêm");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnLuu.setText("Lưu");
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });

        btnsua.setText("Cập nhật");
        btnsua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsuaActionPerformed(evt);
            }
        });

        btnxoa.setText("Xóa");
        btnxoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnxoaActionPerformed(evt);
            }
        });

        btnxuatexcel.setText("Xuất excel");
        btnxuatexcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnxuatexcelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtmasv, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtmail, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                                    .addComponent(cbclass, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(dateNS, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(btnLuu)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addComponent(btnsua)))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnxoa)
                        .addGap(18, 18, 18)
                        .addComponent(btnxuatexcel))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtphone, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                            .addComponent(cbgoitinh, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtmasv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(dateNS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(cbgoitinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtphone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(cbclass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnxuatexcel)
                    .addComponent(jButton1)
                    .addComponent(btnLuu)
                    .addComponent(btnsua)
                    .addComponent(btnxoa))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jLabel11.setText("Lớp:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel9))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtfindmasv, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtfindtensv, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxlop, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btntimkiem)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtfindmasv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(txtfindtensv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btntimkiem)
                    .addComponent(cbxlop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
 private void loadLop() {
        try {
            URL url = new URL("http://localhost:8080/api/lop");
            HttpURLConnection con = (HttpURLConnection) url.openConnection();
            con.setRequestMethod("GET");
            con.setRequestProperty("Accept", "application/json");

            BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream(), "utf-8"));
            StringBuilder response = new StringBuilder();
            String inputLine;
            while ((inputLine = in.readLine()) != null) {
                response.append(inputLine);
            }
            in.close();
            con.disconnect();

            Gson gson = new Gson();
            Lop[] lopList = gson.fromJson(response.toString(), Lop[].class);

            cbclass.removeAllItems();
            cbclass.addItem("---Chọn lớp---");
            cbxlop.addItem("---Chọn lớp---");
            lopMap.clear();
            lopMapReverse.clear();

            for (Lop lop : lopList) {
                cbclass.addItem(lop.getTenlop());
                cbxlop.addItem(lop.getTenlop());
                lopMap.put(lop.getTenlop(), lop.getMalop());
                lopMapReverse.put(lop.getMalop(), lop.getTenlop());
            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi khi nạp dữ liệu lớp!");
        }
    }

    private void txtfindmasvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfindmasvActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfindmasvActionPerformed

    private void btntimkiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntimkiemActionPerformed
        String masv = txtfindmasv.getText().trim();
        String tensv = txtfindtensv.getText().trim();
        try {
            String urlStr = String.format(
                    "http://localhost:8080/api/sinhvien/search?masv=%s&tensv=%s",
                    URLEncoder.encode(masv, StandardCharsets.UTF_8),
                    URLEncoder.encode(tensv, StandardCharsets.UTF_8)
            );

            HttpURLConnection conn = (HttpURLConnection) new URL(urlStr).openConnection();
            conn.setRequestMethod("GET");
            conn.setRequestProperty("Accept", "application/json");

            if (conn.getResponseCode() != HttpURLConnection.HTTP_OK) {
                throw new RuntimeException("Lỗi HTTP: " + conn.getResponseCode());
            }

            // Đọc JSON
            BufferedReader br = new BufferedReader(new InputStreamReader(conn.getInputStream(), StandardCharsets.UTF_8));
            StringBuilder sb = new StringBuilder();
            String line;
            while ((line = br.readLine()) != null) {
                sb.append(line);
            }
            br.close();
            conn.disconnect();

            Gson gson = new Gson();
            SinhVien[] sinhViens = gson.fromJson(sb.toString(), SinhVien[].class);

            // Đổ dữ liệu vào bảng
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0);

            SimpleDateFormat sdfInput = new SimpleDateFormat("yyyy-MM-dd");
            SimpleDateFormat sdfOutput = new SimpleDateFormat("dd/MM/yyyy");
            for (SinhVien sv : sinhViens) {
                String tenlop = lopMapReverse.getOrDefault(sv.getMalop(), sv.getMalop());
                String ngaySinhFormatted = "";
                try {
                    Date parsed = sdfInput.parse(sv.getNgaysinh());
                    ngaySinhFormatted = sdfOutput.format(parsed);
                } catch (ParseException e) {
                    e.printStackTrace();
                }
                model.addRow(new Object[]{
                    sv.getMasv(),
                    sv.getHoten(),
                    ngaySinhFormatted,
                    sv.getGioitinh(),
                    sv.getSdt(),
                    sv.getEmail(),
                    tenlop
                });
            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi khi tìm kiếm sinh viên: " + e.getMessage());
        }
    }//GEN-LAST:event_btntimkiemActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int selectedRow = jTable1.getSelectedRow();
        btnLuu.setEnabled(false);
        btnsua.setEnabled(true);
        btnxoa.setEnabled(true);
        if (selectedRow >= 0) {
            // Lấy dữ liệu từ model
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

            String maSV = model.getValueAt(selectedRow, 0).toString();
            String hoTen = model.getValueAt(selectedRow, 1).toString();
            String ngaySinhStr = model.getValueAt(selectedRow, 2).toString();
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            java.util.Date ngaySinh = null;
            try {
                ngaySinh = sdf.parse(ngaySinhStr);
            } catch (ParseException e) {
                e.printStackTrace();
                ngaySinh = new java.util.Date();
            }

            String gioiTinh = model.getValueAt(selectedRow, 3).toString();
            String dienThoai = model.getValueAt(selectedRow, 4).toString();
            String email = model.getValueAt(selectedRow, 5).toString();
            String tenLop = model.getValueAt(selectedRow, 6).toString();

            // Đưa dữ liệu vào form
            txtmasv.setText(maSV);
            txtname.setText(hoTen);
            dateNS.setDate(ngaySinh);
            cbgoitinh.setSelectedItem(gioiTinh);
            txtphone.setText(dienThoai);
            txtmail.setText(email);
            cbclass.setSelectedItem(tenLop);

            txtmasv.setEnabled(false);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void txtmasvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtmasvActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtmasvActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        btnLuu.setEnabled(true);
        txtmasv.setEnabled(true);
        btnsua.setEnabled(false);
        btnxoa.setEnabled(false);
        clear();
    }//GEN-LAST:event_jButton1ActionPerformed

    private boolean isValidInput() {
        if (txtmasv.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Mã sinh viên không được để trống!");
            txtmasv.requestFocus();
            return false;
        }
        if (txtname.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Họ tên không được để trống!");
            txtname.requestFocus();
            return false;
        }
        if (dateNS.getDate() == null) {
            JOptionPane.showMessageDialog(this, "Ngày sinh không được để trống!");
            dateNS.requestFocus();
            return false;
        }

        if (cbgoitinh.getSelectedIndex() == 0) { // giả sử index 0 là "-- Chọn giới tính --"
            JOptionPane.showMessageDialog(this, "Vui lòng chọn giới tính!");
            cbgoitinh.requestFocus();
            return false;
        }
        if (cbclass.getSelectedIndex() == 0) { // giả sử index 0 là "-- Chọn lớp học --"
            JOptionPane.showMessageDialog(this, "Vui lòng chọn lớp học!");
            cbclass.requestFocus();
            return false;
        }
        if (txtphone.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Số điện thoại không được để trống!");
            txtphone.requestFocus();
            return false;
        }
        if (!isValidPhone(txtphone.getText().trim())) {
            JOptionPane.showMessageDialog(this, "Số điện thoại không hợp lệ! Vui lòng nhập 10-11 chữ số.");
            txtphone.requestFocus();
            return false;
        }
        if (txtmail.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Email không được để trống!");
            txtmail.requestFocus();
            return false;
        }
        if (!isValidEmail(txtmail.getText().trim())) {
            JOptionPane.showMessageDialog(this, "Email không hợp lệ! Vui lòng nhập đúng định dạng email.");
            txtmail.requestFocus();
            return false;
        }

        return true; // Nếu không có lỗi
    }

    private boolean isValidEmail(String email) {
        return email.matches("^[A-Za-z0-9+_.-]+@(.+)$");
    }

    private boolean isValidPhone(String phone) {
        return phone.matches("^[0-9]{10,11}$");
    }

    private void clear() {
        txtmasv.setText("");
        txtname.setText("");
        dateNS.setDate(null);
        cbgoitinh.setSelectedIndex(0);
        cbclass.setSelectedIndex(0);
        txtphone.setText("");
        txtmail.setText("");

    }

    private boolean isExists(String masv) {
        try {
            String urlStr = "http://localhost:8080/api/sinhvien/check-exists?masv=" + URLEncoder.encode(masv, "UTF-8");
            URL url = new URL(urlStr);
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
            conn.setRequestMethod("GET");
            conn.setConnectTimeout(5000);
            conn.setReadTimeout(5000);

            int responseCode = conn.getResponseCode();
            if (responseCode == 200) {
                try (BufferedReader in = new BufferedReader(new InputStreamReader(conn.getInputStream()))) {
                    String inputLine = in.readLine();
                    return Boolean.parseBoolean(inputLine);
                }
            } else {
                System.err.println("Lỗi khi gọi API: HTTP " + responseCode);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        return false;
    }

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        if (!isValidInput()) {
            return;
        }
        String maSV = txtmasv.getText();
        String hoten = txtname.getText();
        java.util.Date utilDate = dateNS.getDate();
        String gioitinh = cbgoitinh.getSelectedItem().toString();
        String tenlop = cbclass.getSelectedItem().toString();
        String malop = lopMap.get(tenlop);
        String dienthoai = txtmail.getText();
        String email = txtphone.getText();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String ngaysinh = sdf.format(dateNS.getDate());

        SinhVien sv = new SinhVien(maSV, hoten, ngaysinh, gioitinh, dienthoai, email, malop);

        Gson gson = new Gson();
        String jsonInputString = gson.toJson(sv);
        try {
            URL url = new URL("http://localhost:8080/api/sinhvien");
            HttpURLConnection con = (HttpURLConnection) url.openConnection();
            con.setRequestMethod("POST");
            con.setRequestProperty("Content-Type", "application/json; utf-8");
            con.setDoOutput(true);

            // Gửi dữ liệu JSON tới server
            try (OutputStream os = con.getOutputStream()) {
                byte[] input = jsonInputString.getBytes("utf-8");
                os.write(input, 0, input.length);
            }

            int code = con.getResponseCode();
            if (code == HttpURLConnection.HTTP_CREATED || code == HttpURLConnection.HTTP_OK) {
                JOptionPane.showMessageDialog(this, "Thêm mới thành công");
                loadtb();
                clear();
            } else {
                InputStream errorStream = con.getErrorStream();
                if (errorStream != null) {
                    String errorMsg = new BufferedReader(new InputStreamReader(errorStream, "utf-8"))
                            .lines().collect(Collectors.joining("\n"));
                    JOptionPane.showMessageDialog(this, "Thêm mới thất bại: " + errorMsg);
                } else {
                    JOptionPane.showMessageDialog(this, "Thêm mới thất bại, mã lỗi: " + code);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnLuuActionPerformed

    private void loadtb() {
        try {
            URL url = new URL("http://localhost:8080/api/sinhvien");
            HttpURLConnection con = (HttpURLConnection) url.openConnection();
            con.setRequestMethod("GET");
            con.setRequestProperty("Accept", "application/json");

            BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream(), "utf-8"));
            StringBuilder response = new StringBuilder();
            String inputLine;

            while ((inputLine = in.readLine()) != null) {
                response.append(inputLine);
            }
            in.close();

            SimpleDateFormat sdfInput = new SimpleDateFormat("yyyy-MM-dd");
            SimpleDateFormat sdfOutput = new SimpleDateFormat("dd/MM/yyyy");

            // Chuyển JSON sang mảng sinh viên
            Gson gson = new Gson();
            SinhVien[] dsSinhVien = gson.fromJson(response.toString(), SinhVien[].class);

            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0);
            for (SinhVien sv : dsSinhVien) {
                String ngaySinhFormatted = "";
                try {
                    Date parsed = sdfInput.parse(sv.getNgaysinh());
                    ngaySinhFormatted = sdfOutput.format(parsed);
                } catch (ParseException e) {
                    e.printStackTrace();
                }

                String tenlop = lopMapReverse.get(sv.getMalop());
                model.addRow(new Object[]{
                    sv.getMasv(),
                    sv.getHoten(),
                    ngaySinhFormatted,
                    sv.getGioitinh(),
                    sv.getSdt(),
                    sv.getEmail(),
                    tenlop
                });
            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi khi gọi API: " + e.getMessage());
        }
    }

    private void btnsuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsuaActionPerformed
        if (!isValidInput()) {
            return;
        }
        try {
            String maSV = txtmasv.getText();
            String hoten = txtname.getText();
            java.util.Date utilDate = dateNS.getDate();
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String ngaysinhStr = sdf.format(utilDate);
            String gioitinh = cbgoitinh.getSelectedItem().toString();
            String tenlop = cbclass.getSelectedItem().toString();
            String malop = lopMap.get(tenlop);
            String dienthoai = txtphone.getText();
            String email = txtmail.getText();

            SinhVien sv = new SinhVien(maSV, hoten, ngaysinhStr, gioitinh, email, dienthoai, malop);

            Gson gson = new Gson();
            String jsonInputString = gson.toJson(sv);

            URL url = new URL("http://localhost:8080/api/sinhvien/" + maSV);
            HttpURLConnection con = (HttpURLConnection) url.openConnection();
            con.setRequestMethod("PUT");
            con.setRequestProperty("Content-Type", "application/json; utf-8");
            con.setRequestProperty("Accept", "application/json");
            con.setDoOutput(true);

            // Gửi JSON vào body request
            try (OutputStream os = con.getOutputStream()) {
                byte[] input = jsonInputString.getBytes("utf-8");
                os.write(input, 0, input.length);
            }

            int code = con.getResponseCode();
            if (code == HttpURLConnection.HTTP_OK || code == HttpURLConnection.HTTP_NO_CONTENT) {
                JOptionPane.showMessageDialog(this, "Cập nhật thành công");
                loadtb();
                txtmasv.setEnabled(true);
                clear();
            } else {

                JOptionPane.showMessageDialog(this, "Cập nhật thất bại: ");
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi khi gọi API: " + e.getMessage());
        }
    }//GEN-LAST:event_btnsuaActionPerformed

    private void btnxoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnxoaActionPerformed
        int selectRow = jTable1.getSelectedRow();

        if (selectRow < 0) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một dòng để xóa.");
            return;
        }
        String masv = jTable1.getValueAt(selectRow, 0).toString();

        int confirm = JOptionPane.showConfirmDialog(null, "Bạn có chắc muốn xóa", "Xác nhận xóa", JOptionPane.YES_NO_OPTION
        );
        if (confirm == JOptionPane.YES_OPTION) {
            try {
                URL url = new URL("http://localhost:8080/api/sinhvien/" + masv);
                HttpURLConnection con = (HttpURLConnection) url.openConnection();
                con.setRequestMethod("DELETE");

                int responseCode = con.getResponseCode();
                if (responseCode == HttpURLConnection.HTTP_OK || responseCode == HttpURLConnection.HTTP_NO_CONTENT) {
                    JOptionPane.showMessageDialog(this, "Xóa thành công");
                    loadtb();
                } else {
                    JOptionPane.showMessageDialog(this, "Xóa thất bại, mã lỗi: " + responseCode);
                }
                con.disconnect();
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Lỗi khi gọi API xóa: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_btnxoaActionPerformed

    private void btnxuatexcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnxuatexcelActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Lưu file Excel");
        int userSelection = fileChooser.showSaveDialog(this);
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            String path = fileChooser.getSelectedFile().getAbsolutePath();

            if (!path.toLowerCase().endsWith(".xlsx")) {
                path += ".xlsx";
            }
            try {
                ExcelExporter.exportTable(jTable1, path);
                JOptionPane.showMessageDialog(this, "Xuất file Excel thành công!");
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Lỗi khi xuất file Excel: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_btnxuatexcelActionPerformed

    private void loadsinhvientheolop() {
        String selectedText = cbxlop.getSelectedItem().toString();
        String selectedLop = lopMap.get(selectedText);
        if (selectedLop == null) {

            loadtb();
        } else {
            try {
                URL url = new URL("http://localhost:8080/api/sinhvien/lop/" + URLEncoder.encode(selectedLop, "UTF-8"));
                HttpURLConnection conn = (HttpURLConnection) url.openConnection();
                conn.setRequestMethod("GET");

                BufferedReader br = new BufferedReader(new InputStreamReader(conn.getInputStream(), StandardCharsets.UTF_8));

                StringBuilder response = new StringBuilder();
                String line;
                while ((line = br.readLine()) != null) {
                    response.append(line);
                }
                br.close();

                SimpleDateFormat sdfInput = new SimpleDateFormat("yyyy-MM-dd");
                SimpleDateFormat sdfOutput = new SimpleDateFormat("dd/MM/yyyy");
                // Parse JSON thành danh sách sinh viên
                Gson gson = new Gson();
                SinhVien[] danhSach = gson.fromJson(response.toString(), SinhVien[].class);

                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                model.setRowCount(0);
                for (SinhVien sv : danhSach) {
                    String ngaySinhFormatted = "";
                    try {
                        Date parsed = sdfInput.parse(sv.getNgaysinh());
                        ngaySinhFormatted = sdfOutput.format(parsed);
                    } catch (ParseException e) {
                        e.printStackTrace();
                    }

                    String tenlop = lopMapReverse.get(sv.getMalop());
                    model.addRow(new Object[]{
                        sv.getMasv(),
                        sv.getHoten(),
                        ngaySinhFormatted,
                        sv.getGioitinh(),
                        sv.getSdt(),
                        sv.getEmail(),
                        tenlop
                    });
                }

            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Lỗi tải sinh viên theo lớp");
            }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLuu;
    private javax.swing.JButton btnsua;
    private javax.swing.JButton btntimkiem;
    private javax.swing.JButton btnxoa;
    private javax.swing.JButton btnxuatexcel;
    private javax.swing.JComboBox<String> cbclass;
    private javax.swing.JComboBox<String> cbgoitinh;
    private javax.swing.JComboBox<String> cbxlop;
    private com.toedter.calendar.JDateChooser dateNS;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtfindmasv;
    private javax.swing.JTextField txtfindtensv;
    private javax.swing.JTextField txtmail;
    private javax.swing.JTextField txtmasv;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtphone;
    // End of variables declaration//GEN-END:variables
}
